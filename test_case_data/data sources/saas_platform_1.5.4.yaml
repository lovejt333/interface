# Code completion support is available so start typing for available options.
swagger: '2.0'

info:
  version: "1.5.4"
  title: PlatformService API
  description: 业务服务--运营平台服务接口说明

host: ejw.hnjing.com
#host: localhost:8080
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

#数据返回的约定
#1.响应码只有200、400、403、404、405、500。
#2.获取列表接口无数据时响应码200，返回空列表和page信息。
#3.获取单个资源接口无数据时响应码404，返回404错误信息。
#4.路径中的参数错误导致资源不存在，响应码404，返回404错误信息。
#5.没有权限读取、修改、删除资源响应码403，返回403错误信息。
#6.输入参数校验失败响应码400，返回400错误信息。
#7.资源没有对应的方法响应码405，返回405错误信息。
#8.删除资源时同时删除其相关关联关系，不要产生500错误。

#必填字段约定
#1.必填是指添加或修改信息时，该字段必须传值。
#2.修改信息时必填字段可以不传，即为不修改。

################################################################################
#                              API Information                                 #
################################################################################
paths:

  /bank/heads:
    get:
      summary: 获取银行总行列表
      description: 获取银行总行列表
      tags:
        - 公共
      parameters:
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 银行总行列表
          schema:
            $ref: '#/definitions/BankHeadsPage'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /bank/branchs:
    get:
      summary: 获取银行支行列表
      description: 获取银行支行列表
      tags:
        - 公共
      parameters:
        - name: bankHead
          in: query
          type: string
          description: 总行名称，全匹配
        - name: bankProvince
          in: query
          type: string
          description: 省名称，全匹配
        - name: bankCity
          in: query
          type: string
          description: 市名称，全匹配
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 银行支行列表
          schema:
            $ref: '#/definitions/BankBranchsPage'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /bank/areas:
    get:
      summary: 获取银行区域信息列表
      description: 获取银行区域信息（省市）列表
      tags:
        - 公共
      responses:
        200:
          description: 省市列表
          schema:
            type: array
            items:
              type: object
              description: 省列表
              properties:
                province:
                  type: string
                  description: 省名称
                provinceNo:
                  type: string
                  description: 省编号
                children:
                  type: array
                  items:
                    type: object
                    description: 市列表
                    properties:
                      city:
                        type: string
                        description: 市名称
                      cityNo:
                        type: string
                        description: 市编号
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /platformindustrys:
    get:
      summary: 获取平台行业类别列表
      description: 获取平台行业类别列表
      tags:
        - 公共
      parameters:
        - name: parentId
          in: query
          description: 父级行业id，不传则返回所有
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 平台行业类别列表
          schema:
            $ref: '#/definitions/PlatformIndustrys'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /platformindustrys/{industryIds}:
    get:
      summary: 根据id批量获取平台行业类别列表
      description: 根据id批量获取平台行业类别列表
      tags:
        - 公共
      parameters:
        -
          name: industryIds
          in: path
          description: 平台行业id，多个id以英文逗号分隔
          required: true
          type: string

      responses:
        200:
          description: 平台行业类别列表
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformIndustryResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /platformindustry:
    post:
      summary: 添加平台行业类别
      description: 添加平台行业类别
      tags:
        - 公共
      parameters:
        -
          name: platformIndustry
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/PlatformIndustryReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/PlatformIndustryResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /platformindustry/{industryId}:
    get:
      summary: 获取平台行业类别信息
      description: 获取平台行业类别信息
      tags:
        - 公共
      parameters:
        -
          name: industryId
          in: path
          description: 平台行业id
          required: true
          type: integer

      responses:
        200:
          description: 平台行业类别信息
          schema:
            $ref: '#/definitions/PlatformIndustryResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改平台行业类别
      description: 修改平台行业类别
      tags:
        - 公共
      parameters:
        -
          name: industryId
          in: path
          description: 平台行业id
          required: true
          type: integer
        -
          name: platformIndustry
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/PlatformIndustryReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除平台行业类别
      description: 删除平台行业类别，需要同时删除其子类别
      tags:
        - 公共
      parameters:
        - name: industryId
          in: path
          description: 平台行业id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /platformindustry/sorts/{downId}/{upId}:
    put:
      summary: 调整平台行业排序
      description: 调整平台行业排序，交换排序号
      tags:
        - 公共
      parameters:
        -
          name: downId
          in: path
          description: 需要下降的平台行业id
          required: true
          type: integer
        -
          name: upId
          in: path
          description: 需要上升的平台行业id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /standardindustrys:
    get:
      summary: 获取标准行业类别列表
      description: 获取标准行业类别列表
      tags:
        - 公共
      parameters:
        - name: parentId
          in: query
          description: 父级行业id，不传则返回所有
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'

      responses:
        200:
          description: 标准行业类别列表
          schema:
            $ref: '#/definitions/StandardIndustrys'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /standardindustrys/{industryIds}:
    get:
      summary: 根据id批量获取标准行业类别列表
      description: 根据id批量获取标准行业类别列表
      tags:
        - 公共
      parameters:
        -
          name: industryIds
          in: path
          description: 标准行业id，多个id以英文逗号分隔
          required: true
          type: string

      responses:
        200:
          description: 标准行业类别列表
          schema:
            type: array
            items:
              $ref: '#/definitions/StandardIndustryResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /standardindustry:
    post:
      summary: 添加标准行业类别
      description: 添加标准行业类别
      tags:
        - 公共
      parameters:
        -
          name: platformIndustry
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/StandardIndustryReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/StandardIndustryResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /standardindustry/{industryId}:
    get:
      summary: 获取标准行业类别信息
      description: 获取标准行业类别信息
      tags:
        - 公共
      parameters:
        -
          name: industryId
          in: path
          description: 标准行业id
          required: true
          type: integer

      responses:
        200:
          description: 标准行业类别信息
          schema:
            $ref: '#/definitions/StandardIndustryResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改标准行业类别
      description: 修改标准行业类别
      tags:
        - 公共
      parameters:
        -
          name: industryId
          in: path
          description: 标准行业id
          required: true
          type: integer
        -
          name: standardIndustry
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/StandardIndustryReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除标准行业类别
      description: 删除标准行业类别，需要同时删除其子类别
      tags:
        - 公共
      parameters:
        -
          name: industryId
          in: path
          description: 标准行业id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /categorys:
    get:
      summary: 获取品类列表
      description: 获取品类列表
      tags:
        - 公共
      parameters:
        - name: parentId
          in: query
          description: 父级品类id，不传则返回所有
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'

      responses:
        200:
          description: 品类列表
          schema:
            $ref: '#/definitions/Categorys'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /categorys/{categoryIds}:
    get:
      summary: 根据id批量获取品类列表
      description: 根据id批量获取品类列表
      tags:
        - 公共
      parameters:
        -
          name: categoryIds
          in: path
          description: 品类id，多个id以英文逗号分隔
          required: true
          type: string

      responses:
        200:
          description: 品类列表
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /category:
    post:
      summary: 添加品类
      description: 添加品类
      tags:
        - 公共
      parameters:
        -
          name: category
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/CategoryReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/CategoryResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /category/{categoryId}:
    get:
      summary: 获取品类信息
      description: 获取品类信息
      tags:
        - 公共
      parameters:
        -
          name: categoryId
          in: path
          description: 品类id
          required: true
          type: integer

      responses:
        200:
          description: 品类信息
          schema:
            $ref: '#/definitions/CategoryResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改品类
      description: 修改品类
      tags:
        - 公共
      parameters:
        -
          name: categoryId
          in: path
          description: 品类id
          required: true
          type: integer
        -
          name: category
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/CategoryReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除品类
      description: 删除品类，需要同时删除其子类别
      tags:
        - 公共
      parameters:
        -
          name: categoryId
          in: path
          description: 品类id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytypes:
    get:
      summary: 获取资质类型列表
      description: 获取资质类型列表
      tags:
        - 公共
      parameters:
        - name: parentId
          in: query
          description: 父级id，不传则返回所有
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 资质类型列表
          schema:
            $ref: '#/definitions/QualifyTypes'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytype:
    post:
      summary: 添加资质类型
      description: 添加资质类型
      tags:
        - 公共
      parameters:
        -
          name: body
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/QualifyTypeReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/QualifyTypeResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytype/{typeId}:
    get:
      summary: 获取资质类型信息
      description: 获取资质类型信息
      tags:
        - 公共
      parameters:
        -
          name: typeId
          in: path
          description: 资质类型id
          required: true
          type: integer

      responses:
        200:
          description: 资质类型信息
          schema:
            $ref: '#/definitions/QualifyTypeResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改资质类型
      description: 修改资质类型
      tags:
        - 公共
      parameters:
        -
          name: typeId
          in: path
          description: 资质类型id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/QualifyTypeReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除资质类型
      description: 删除资质类型
      tags:
        - 公共
      parameters:
        - name: typeId
          in: path
          description: 资质类型id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytype/check:
    get:
      summary: 资质类型校验
      description: 资质类型校验，判断符合条件的记录是否存在
      tags:
        - 公共
      parameters:
        - name: typeId
          in: query
          description: 资质类型id，使用"!="匹配（不等于）
          required: false
          type: integer
        - name: typeName
          in: query
          description: 资质类型名称，使用"="匹配（全匹配）
          required: false
          type: string

      responses:
        200:
          description: 记录数
          schema:
            $ref: '#/definitions/RowsResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytemplates:
    get:
      summary: 获取资质模板列表
      description: 获取资质模板列表
      tags:
        - 公共
      parameters:
        - name: typeId
          in: query
          description: 资质类型id，不传则返回所有
          required: false
          type: integer
        - name: tempName
          in: query
          description: 资质模板名称，支持前后模糊匹配
          required: false
          type: string
        - name: status
          in: query
          description: 状态，1：正常；0：停用，不传则返回所有
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 资质模板列表
          schema:
            $ref: '#/definitions/QualifyTemplates'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytemplates/{tempIds}:
    get:
      summary: 根据id批量获取资质模板列表
      description: 根据id批量获取资质模板列表
      tags:
        - 公共
      parameters:
        - name: tempIds
          in: path
          description: 资质id，多个id以英文逗号分隔
          required: true
          type: string

      responses:
        200:
          description: 资质模板列表
          schema:
            $ref: '#/definitions/QualifyTemplate'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytemplate:
    post:
      summary: 添加资质模板
      description: 添加资质模板
      tags:
        - 公共
      parameters:
        -
          name: body
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/QualifyTemplateReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/QualifyTemplateResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytemplate/{tempId}:
    get:
      summary: 获取资质模板信息
      description: 获取资质模板信息
      tags:
        - 公共
      parameters:
        -
          name: tempId
          in: path
          description: 资质模板id
          required: true
          type: integer

      responses:
        200:
          description: 资质模板信息
          schema:
            $ref: '#/definitions/QualifyTemplateResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改资质模板
      description: 修改资质模板
      tags:
        - 公共
      parameters:
        -
          name: tempId
          in: path
          description: 资质模板id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/QualifyTemplateReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除资质模板
      description: 删除资质模板
      tags:
        - 公共
      parameters:
        - name: tempId
          in: path
          description: 资质模板id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytemplate/{tempId}/status:
    put:
      summary: 启用停用资质模板
      description: 启用停用资质模板
      tags:
        - 公共
      parameters:
        - name: tempId
          in: path
          description: 资质模板id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/Status'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /qualifytemplate/check:
    get:
      summary: 资质模板校验
      description: 资质模板校验，判断符合条件的记录是否存在
      tags:
        - 公共
      parameters:
        - name: tempId
          in: query
          description: 资质模板id，使用"!="匹配（不等于）
          required: false
          type: integer
        - name: tempName
          in: query
          description: 资质模板名称，使用"="匹配（全匹配）
          required: false
          type: string

      responses:
        200:
          description: 记录数
          schema:
            $ref: '#/definitions/RowsResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /contracttemplates:
    get:
      summary: 获取合同模板列表
      description: 获取合同模板列表
      tags:
        - 公共
      parameters:
        - name: tempName
          in: query
          description: 合同模板名称，支持前后模糊匹配
          required: false
          type: string
        - name: status
          in: query
          description: 状态，1：正常；0：停用，不传则返回所有
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 合同模板列表
          schema:
            $ref: '#/definitions/ContractTemplates'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /contracttemplate:
    post:
      summary: 添加合同模板
      description: 添加合同模板
      tags:
        - 公共
      parameters:
        -
          name: body
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/ContractTemplateReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/ContractTemplateResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /contracttemplate/{tempId}:
    get:
      summary: 获取合同模板信息
      description: 获取合同模板信息
      tags:
        - 公共
      parameters:
        -
          name: tempId
          in: path
          description: 合同模板id
          required: true
          type: integer

      responses:
        200:
          description: 合同模板信息
          schema:
            $ref: '#/definitions/ContractTemplateResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改合同模板
      description: 修改合同模板
      tags:
        - 公共
      parameters:
        -
          name: tempId
          in: path
          description: 合同模板id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/ContractTemplateReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除合同模板
      description: 删除合同模板
      tags:
        - 公共
      parameters:
        - name: tempId
          in: path
          description: 合同模板id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /contracttemplate/{tempId}/status:
    put:
      summary: 启用停用合同模板
      description: 启用停用合同模板
      tags:
        - 公共
      parameters:
        - name: tempId
          in: path
          description: 合同模板id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/Status'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /contracttemplate/check:
    get:
      summary: 合同模板校验
      description: 合同模板校验，判断符合条件的记录是否存在
      tags:
        - 公共
      parameters:
        - name: tempId
          in: query
          description: 合同模板id，使用"!="匹配（不等于）
          required: false
          type: integer
        - name: tempName
          in: query
          description: 合同模板名称，使用"="匹配（全匹配）
          required: false
          type: string

      responses:
        200:
          description: 记录数
          schema:
            $ref: '#/definitions/RowsResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /collections:
    get:
      summary: 获取收藏列表
      description: 获取收藏列表
      tags:
        - 公共
      parameters:
        - name: contentType
          type: integer
          in: query
          required: false
          description: 内容类型；1：产品；2：合作伙伴
        - name: contentId
          type: string
          in: query
          required: false
          description: 内容id
        - name: contentPartner
          type: integer
          in: query
          required: false
          description: 内容所属企业id，完全匹配
        - name: partnerId
          type: integer
          in: query
          required: false
          description: 所属企业id，完全匹配
        - name: userId
          type: integer
          in: query
          required: false
          description: 所属用户id，完全匹配
        - name: appName
          type: string
          in: query
          required: false
          description: 所属应用名称，完全匹配
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 收藏列表
          schema:
            $ref: '#/definitions/Collections'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /collections/groups:
    get:
      summary: 获取收藏分组
      description: 获取收藏分组（按内容所属企业分组）
      tags:
        - 公共
      parameters:
        - name: contentType
          type: integer
          in: query
          required: false
          description: 内容类型；1：产品；2：合作伙伴
        - name: contentPartner
          type: integer
          in: query
          required: false
          description: 内容所属企业id，完全匹配
        - name: partnerId
          type: integer
          in: query
          required: false
          description: 所属企业id，完全匹配
        - name: userId
          type: integer
          in: query
          required: false
          description: 所属用户id，完全匹配
        - name: appName
          type: string
          in: query
          required: false
          description: 所属应用名称，完全匹配
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 收藏分组列表
          schema:
            type: array
            items:
              type: object
              description: 分组信息
              properties:
                contentType:
                  type: integer
                  description: 内容类型；1：产品；2：合作伙伴
                contentPartner:
                  type: integer
                  description: 内容所属企业id

        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /collection:
    post:
      summary: 添加收藏
      description: 添加收藏
      tags:
        - 公共
      parameters:
        -
          name: body
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/CollectionReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/CollectionResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /collection/{collectionId}:
    get:
      summary: 获取收藏信息
      description: 获取收藏信息
      tags:
        - 公共
      parameters:
        -
          name: collectionId
          in: path
          description: 收藏id
          required: true
          type: integer

      responses:
        200:
          description: 收藏信息
          schema:
            $ref: '#/definitions/CollectionResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改收藏
      description: 修改收藏
      tags:
        - 公共
      parameters:
        -
          name: collectionId
          in: path
          description: 收藏id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/CollectionReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除收藏
      description: 删除收藏
      tags:
        - 公共
      parameters:
        - name: collectionId
          in: path
          description: 收藏id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /filetemplates:
    get:
      summary: 获取文档模板列表
      description: 获取文档模板列表
      tags:
        - 公共
      parameters:
        - name: tempKey
          in: query
          description: 模板关键字，多个关键字以逗号分隔
          required: false
          type: string

      responses:
        200:
          description: 模板列表
          schema:
            type: array
            items:
              type: object
              properties:
                tempId:
                  type: integer
                  description: 模版ID
                tempKey:
                  type: string
                  description: 模版关键字
                tempName:
                  type: string
                  description: 模版名称
                tempUrl:
                  type: string
                  description: 模版下载地址
                tempDesc:
                  type: string
                  description: 模版描述
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /phonemsg:
    post:
      summary: 发送短信
      description: 发送短信
      tags:
        - 公共
      parameters:
        -
          name: phonemsg
          in: body
          description: 需要发送的信息
          schema:
            $ref: '#/definitions/PhoneMsg'
          required: true

      responses:
        200:
          description: 发送成功
          schema:
            $ref: '#/definitions/PhoneMsg'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /emailmsg:
    post:
      summary: 发送邮件
      description: 发送邮件
      tags:
        - 公共
      parameters:
        -
          name: emailmsg
          in: body
          description: 需要发送的信息
          schema:
            $ref: '#/definitions/EmailMsg'
          required: true

      responses:
        200:
          description: 发送成功
          schema:
            $ref: '#/definitions/EmailMsg'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /departments:
    get:
      summary: 获取部门列表
      description: 获取部门列表
      tags:
        - 部门
      parameters:
        -
          name: parentId
          in: query
          description: 上级部门id，用于获取某部门的下级部门
          required: false
          type: integer
        -
          name: status
          in: query
          description: 状态
          required: false
          type: integer
        -
          name: isShowUndis
          in: query
          description: 是否显示未分配部门，默认0：否；1：是（如果该合作伙伴有未分配部门的员工，则在返回的部门列表中自动增加一条“未分配部门”）
          required: false
          type: integer
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 部门列表
          schema:
            $ref: '#/definitions/Departments'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /department:
    post:
      summary: 添加部门信息
      description: 添加部门信息
      tags:
        - 部门
      parameters:
        - name: department
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/DepartmentReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/DepartmentResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /department/{id}:
    get:
      summary: 获取部门信息
      description: 获取部门信息
      tags:
        - 部门
      parameters:
        - name: id
          in: path
          description: 部门id
          required: true
          type: integer

      responses:
        200:
          description: 部门信息
          schema:
            $ref: '#/definitions/DepartmentResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改部门信息
      description: 修改部门信息
      tags:
        - 部门
      parameters:
        - name: id
          in: path
          description: 部门id
          required: true
          type: integer
        -
          name: department
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/DepartmentReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除部门
      description: 删除部门，同时删除其所有子部门，并将部门和子部门下员工关系删除（员工变为无部门）
      tags:
        - 部门
      parameters:
        - name: id
          in: path
          description: 部门id
          required: true
          type: integer

      responses:
        200:
          description: 删除成功，返回未分配部门信息
          schema:
            $ref: '#/definitions/Department'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /roles:
    get:
      summary: 获取角色列表
      description: 获取角色列表
      tags:
        - 角色
      parameters:
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'
        - name: appName
          in: query
          description: 应用名称
          required: false
          type: string

      responses:
        200:
          description: 角色列表
          schema:
            $ref: '#/definitions/Roles'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /role:
    post:
      summary: 添加角色
      description: 添加角色
      tags:
        - 角色
      parameters:
        - name: role
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/RoleReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/RoleResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /role/{id}:
    get:
      summary: 获取角色信息
      description: 获取角色信息
      tags:
        - 角色
      parameters:
        - name: id
          in: path
          description: 角色id
          required: true
          type: integer

      responses:
        200:
          description: 角色信息
          schema:
            $ref: '#/definitions/RoleResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改角色信息
      description: 修改角色信息
      tags:
        - 角色
      parameters:
        -
          name: id
          in: path
          description: 角色id
          required: true
          type: integer
        -
          name: role
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/RoleReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除角色
      description: 删除角色同时删除员工与角色对应关系
      tags:
        - 角色
      parameters:
        - name: id
          in: path
          description: 角色id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /role/{id}/operations:
    get:
      summary: 获取角色拥有操作列表
      description: 获取角色拥有操作列表
      tags:
        - 角色
      parameters:
        - name: id
          in: path
          description: 角色id
          required: true
          type: integer

      responses:
        200:
          description: 角色拥有操作列表
          schema:
            $ref: '#/definitions/OperationResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改角色拥有操作（全量数据修改）
      description: 修改角色拥有操作（全量数据修改）
      tags:
        - 角色
      parameters:
        -
          name: id
          in: path
          description: 角色id
          required: true
          type: integer
        -
          name: operations
          in: body
          description: 需要修改的信息
          schema:
            type: array
            items:
              type: integer
              description: 操作id
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /role/{id}/employees:
    get:
      summary: 获取角色拥有员工列表
      description: 获取角色拥有员工列表
      tags:
        - 角色
      parameters:
        - name: id
          in: path
          description: 角色id
          required: true
          type: integer

      responses:
        200:
          description: 角色拥有员工列表
          schema:
            $ref: '#/definitions/PlatformEmployeeResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改角色拥有员工（全量数据修改）
      description: 修改角色拥有员工（全量数据修改）
      tags:
        - 角色
      parameters:
        -
          name: id
          in: path
          description: 角色id
          required: true
          type: integer
        -
          name: employees
          in: body
          description: 需要修改的信息
          schema:
            type: array
            items:
              type: integer
              description: 员工id
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /operations:
    get:
      summary: 获取操作列表
      description: 获取操作列表
      tags:
        - 操作
      parameters:
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'
        - name: appName
          in: query
          description: 应用名称
          required: false
          type: string

      responses:
        200:
          description: 操作列表
          schema:
            $ref: '#/definitions/Operations'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /operation:
    post:
      summary: 添加操作信息
      description: 添加操作信息
      tags:
        - 操作
      parameters:
        -
          name: operation
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/OperationReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/OperationResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /operation/{id}:
    get:
      summary: 获取操作信息
      description: 获取操作信息
      tags:
        - 操作
      parameters:
        - name: id
          in: path
          description: 操作id
          required: true
          type: integer

      responses:
        200:
          description: 操作信息
          schema:
            $ref: '#/definitions/OperationResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改操作信息
      description: 修改操作信息
      tags:
        - 操作
      parameters:
        -
          name: id
          in: path
          description: 操作id
          required: true
          type: integer
        -
          name: operation
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/OperationReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除操作
      description: 删除操作同时删除操作与api对应关系
      tags:
        - 操作
      parameters:
        -
          name: id
          in: path
          description: 操作id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /operation/{operationId}/apis:
    get:
      summary: 获取操作的Api列表
      description: 获取操作的Api列表
      tags:
        - 操作
      parameters:
        -
          name: operationId
          in: path
          description: 操作id
          required: true
          type: integer

      responses:
        200:
          description: Api列表
          schema:
            type: array
            items:
              type: string
              description: ApiId
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改操作与Api对应关系（全量修改）
      description: 修改操作与Api对应关系（全量修改）
      tags:
        - 操作
      parameters:
        -
          name: operationId
          in: path
          description: 操作id
          required: true
          type: integer
        -
          name: apiIds
          in: body
          description: Api列表
          required: true
          schema:
            type: array
            items:
              type: string
              description: ApiId

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除操作与Api对应关系
      description: 删除操作与Api对应关系
      tags:
        - 操作
      parameters:
        -
          name: operationId
          in: path
          description: 操作id
          required: true
          type: integer
        -
          name: apiIds
          in: body
          description: Api列表
          required: true
          schema:
            type: array
            items:
              type: string
              description: ApiId

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /employees:
    get:
      summary: 获取员工列表
      description: 传入部门时需要根据部门查询员工列表；业务规则为：1、部门id不为0，需要查询出该部门以及所有子部门的员工列表；2、部门id为0，则查询出所有未分配部门的员工；3、部门id为null（未传部门id）则不做部门过滤
      tags:
        - 员工
      parameters:
        -
          name: depId
          in: query
          description: 部门id
          required: false
          type: string
        -
          name: status
          in: query
          description: 状态，1：启用；0：停用；2：未激活
          required: false
          type: integer
        -
          name: jobNoOrEmpName
          in: query
          description: 查询参数，该参数不为空时，根据员工工号或姓名过滤（ 返回工号或者姓名中包含该条件的数据）。
          required: false
          type: string
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 员工列表
          schema:
            $ref: '#/definitions/PlatformEmployees'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    post:
      summary: 批量添加员工
      description: 批量添加员工
      tags:
        - 员工
      parameters:
        - $ref: '#/parameters/UserId'
        -
          name: employees
          in: body
          description: 需要添加的信息
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformEmployeeReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformEmployeeResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /employee:
    post:
      summary: 添加员工
      description: 添加员工
      tags:
        - 员工
      parameters:
        - $ref: '#/parameters/UserId'
        -
          name: employee
          in: body
          description: 需要添加的信息
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformEmployeeReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/PlatformEmployeeResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /employee/{empId}:
    get:
      summary: 获取员工信息
      description: 获取员工信息
      tags:
        - 员工
      parameters:
        - $ref: '#/parameters/UserId'
        -
          name: empId
          in: path
          description: 员工id
          required: true
          type: integer

      responses:
        200:
          description: 员工信息
          schema:
            $ref: '#/definitions/PlatformEmployeeResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改员工信息
      description: 修改员工信息
      tags:
        - 员工
      parameters:
        - $ref: '#/parameters/UserId'
        -
          name: empId
          in: path
          description: 员工id
          required: true
          type: integer
        -
          name: employee
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/PlatformEmployeeReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除员工
      description: 删除员工同时删除员工部门关系、员工角色关系
      tags:
        - 员工
      parameters:
        - name: empId
          in: path
          description: 员工id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /employee/{empId}/status:
    put:
      summary: 启用停用员工
      description: 启用停用员工
      tags:
        - 员工
      parameters:
        - $ref: '#/parameters/UserId'
        -
          name: empId
          in: path
          description: 员工id
          required: true
          type: integer
        -
          name: status
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/Status'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /employee/{empId}/operations:
    get:
      summary: 获取员工操作列表
      description: 获取员工操作列表
      tags:
        - 员工
      parameters:
        -
          name: empId
          in: path
          description: 员工id
          required: true
          type: integer
        -
          name: appName
          in: query
          description: 应用名称
          required: false
          type: string
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'

      responses:
        200:
          description: 员工操作列表
          schema:
            $ref: '#/definitions/Operations'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /user/{userId}/employees:
    get:
      summary: 根据用户id获取员工列表
      description: 根据用户id获取员工列表，不显示非正常状态和非在职状态员工
      tags:
        - 用户
      parameters:
        -
          name: userId
          in: path
          description: 用户id
          required: true
          type: integer

      responses:
        200:
          description: 员工列表
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformEmployeeResp'
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /user/{userId}/apis:
    get:
      summary: 获取用户api权限列表
      description: 获取用户api权限列表
      tags:
        - 用户
      parameters:
        - name: userId
          in: path
          description: 用户id
          required: true
          type: integer
      responses:
        200:
          description: Api列表
          schema:
            type: array
            items:
              type: string
              description: ApiId
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/{partnerId}/audit:
    put:
      summary: 合作伙伴审核
      description: 合作伙伴审核
      tags:
        - 合作伙伴
      parameters:
        -
          name: user-id
          in: header
          description: 当前操作用户id
          required: true
          type: string
        -
          name: partnerId
          in: path
          description: 合作伙伴id
          required: true
          type: integer
        -
          name: audit
          in: body
          description: 合作伙伴全量信息
          schema:
            $ref: '#/definitions/PartnerAllWidthAudit'
          required: true

      responses:
        200:
          description: 提交成功
          schema:
            $ref: '#/definitions/PartnerAudit'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/{partnerId}/status:
    put:
      summary: 启用停用合作伙伴
      description: 启用停用合作伙伴
      tags:
        - 合作伙伴
      parameters:
        -
          name: user-id
          in: header
          description: 当前操作用户id
          required: false
          type: string
        -
          name: partnerId
          in: path
          description: 合作伙伴id
          required: true
          type: integer
        -
          name: status
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/PartnerStatus'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /partnerall:
    post:
      summary: 添加合作伙伴全量信息
      description: 添加合作伙伴全量信息
      tags:
        - 合作伙伴
      parameters:
        - name: partner
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/PartnerAll'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/PartnerAll'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/{partnerId}/pay:
    post:
      summary: 添加合作伙伴支付信息
      description: 添加合作伙伴支付信息
      tags:
        - 合作伙伴
      parameters:
        - $ref: '#/parameters/PartnerId'
        -
          name: tax
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/PartnerPayReqPost'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 修改合作伙伴支付信息
      description: 修改合作伙伴支付信息
      tags:
        - 合作伙伴
      parameters:
        - $ref: '#/parameters/PartnerId'
        -
          name: tax
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/PartnerPayReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/pay/notify:
    get:
      summary: 支付账号通知
      description: 支付账号通知，易宝专用
      tags:
        - 合作伙伴
      parameters:
        - name: data
          in: query
          description: 通知内容
          type: string
      responses:
        200:
          description: 处理结果，SUCCESS：处理完成；FAILED：处理失败
          schema:
           type: string
        400:
          $ref: '#/responses/ParametersErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/{partnerId}/verifycode:
    post:
      summary: 发送验证码
      description: 发送验证码
      tags:
        - 合作伙伴
      parameters:
        - $ref: '#/parameters/PartnerId'
        -
          name: code
          in: body
          description: 需要添加的信息
          schema:
            type: object
            description: 验证码信息
            properties:
              phone:
                type: string
                description: 手机号码
                maxLength: 11
              verifyCode:
                type: string
                description: 验证码
                minLength: 6
                maxLength: 6
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/{partnerId}/verifycode/check:
    get:
      summary: 校验验证码
      description: 校验验证码
      tags:
        - 合作伙伴
      parameters:
        - $ref: '#/parameters/PartnerId'
        - name: phone
          in: query
          description: 手机号码
          type: string
        - name: verifyCode
          in: query
          description: 验证码
          type: string
      responses:
        200:
          description: 校验结果，true：通过；false：不通过
          schema:
           type: boolean
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /partner/{partnerId}/employee/{empId}/invite:
    get:
      summary: 邀请合作伙伴员工
      description: 邀请合作伙伴员工
      tags:
        - 合作伙伴
      parameters:
        - $ref: '#/parameters/UserId'
        -
          name: partnerId
          in: path
          description: 合作伙伴id
          required: true
          type: integer
        -
          name: empId
          in: path
          description: 员工id
          required: true
          type: integer

      responses:
        200:
          description: 邀请成功
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /platform/employee/{empId}/invite:
    get:
      summary: 邀请平台员工
      description: 邀请平台员工
      tags:
        - 员工
      parameters:
        - $ref: '#/parameters/UserId'
        - name: empId
          in: path
          description: 员工id
          required: true
          type: integer

      responses:
        200:
          description: 邀请成功
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /user/bindemp:
    get:
      summary: 用户绑定员工
      description: 用户绑定员工
      tags:
        - 用户
      parameters:
        -
          name: user-id
          in: header
          description: 当前操作用户id
          required: true
          type: string
        -
          name: code
          in: query
          description: 随机码
          required: true
          type: string

      responses:
        200:
          description: 绑定成功
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /products:
    get:
      summary: 获取产品列表
      description: 获取产品列表
      tags:
        - 产品
      parameters:
        - name: partnerIds
          in: query
          type: integer
          description: 合作伙伴id，多个id以逗号分隔
        - name: productName
          in: query
          type: string
          description: 产品名称
        - name: uuids
          in: query
          type: string
          description: 产品编号，多个编号以逗号分隔
        - name: typeId
          in: query
          type: integer
          format: int32
          description: 所属品类
        - name: specMinPrice
          in: query
          type: number
          description: 产品所属实例最低价
        - name: specMaxPrice
          in: query
          type: number
          description: 产品所属实例最高价
        - name: productStatus
          in: query
          description: 产品状态，0：草稿；1：上架；2：下架
          type: integer
        - $ref: '#/parameters/ProductType'
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 产品列表，更多产品参数参考产品库（ps）接口文档
          schema:
            $ref: '#/definitions/ProductsPage'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /product/{uuid}:
    get:
      summary: 获取产品信息
      description: 获取产品信息
      tags:
        - 产品
      parameters:
        -
          name: uuid
          in: path
          description: 产品编号
          required: true
          type: string

      responses:
        200:
          description: 产品信息
          schema:
            $ref: '#/definitions/ProductResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productsverify:
    get:
      summary: 批量获取产品审核状态
      description: 批量获取产品审核状态
      tags:
        - 产品
      parameters:
        - name: productId
          in: query
          description: 产品编号，多个id以逗号分隔
          required: true
          type: string

      responses:
        200:
          description: 产品审核信息
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProductsverifyResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productverifies:
    get:
      summary: 获取产品审核列表
      description: 获取产品审核列表
      tags:
        - 产品
      parameters:
        - name: partnerId
          in: query
          type: integer
          description: 企业id
        - name: productName
          in: query
          type: string
          description: 产品名称
        - name: productId
          in: query
          type: string
          description: 产品编号
        - name: verifyStatus
          in: query
          description: 审核状态，1：上架待审核；2：下架待审核；3：上架审核通过；4：下架审核通过；5：上架审核不通过；6：下架审核不通过
          type: integer
        - $ref: '#/parameters/ProductType'
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 产品审核列表
          schema:
            $ref: '#/definitions/Productverifies'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productverifies/{productId}:
    get:
      summary: 获取产品审核历史记录
      description: 获取产品审核历史记录
      tags:
        - 产品
      parameters:
        - name: productId
          in: path
          description: 产品编号
          required: true
          type: string

      responses:
        200:
          description: 产品审核列表
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/VerifyRecords'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除产品审核历史记录
      description: 删除产品审核历史记录，如果有上架审核通过记录，则不允许删除
      tags:
        - 产品
      parameters:
        - name: productId
          in: path
          description: 产品编号
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productverify:
    post:
      summary: 添加产品审核|该接口只供后台调用
      description: 添加产品审核
      tags:
        - 产品
      parameters:
        - name: productverify
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/ProductverifyReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/RoleResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productverify/{verifyId}:
    put:
      summary: 审核产品
      description: 审核产品，只有审核状态=0（待审核） 才允许审核
      tags:
        - 产品
      parameters:
        -
          name: verifyId
          in: path
          description: 产品审核记录id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 审核信息
          schema:
            $ref: '#/definitions/ProductverifyReqPut'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除产品审核（取消审核）
      description: 删除产品审核，只有审核状态=0（待审核） 才允许删除
      tags:
        - 产品
      parameters:
        - name: verifyId
          in: path
          description: 产品审核记录id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauths:
    get:
      summary: 获取产品授权列表
      description: 获取产品授权列表，status=51为虚拟审核状态，返回授权有效期小于两个月的已授权记录；cp调用不展示status=0的记录，platform调用不展示status=0、1、2的记录
      tags:
        - 产品授权
      parameters:
        - name: cpId
          in: query
          type: integer
          description: 供应商id，精确匹配
        - name: spId
          in: query
          type: integer
          description: 服务商id，精确匹配
        - name: authId
          in: query
          type: integer
          description: 授权单号，模糊匹配
        - name: authType
          in: query
          description: 授权类型，1：部分产品授权；2：全部产品授权
          type: integer
        - name: status
          in: query
          description: 审核状态，多个状态以逗号分隔，0：待提交；1：待供应商审核；2：供应商审核不通过；3：待运营平台审核；4：运营平台审核不通过；5：已授权（审核通过）；6：已失效；51：即将过期
          type: string
        - name: appName
          in: query
          type: string
          enum:
            - "cp"
            - "sp"
            - "platform"
          description: 调用方应用名称
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/Sort'

      responses:
        200:
          description: 产品授权列表
          schema:
            $ref: '#/definitions/ProductAuthDetails'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauths/{authId}:
    get:
      summary: 获取授权单授权记录列表
      description: 获取授权单授权记录列表
      tags:
        - 产品授权
      parameters:
        - name: authId
          in: path
          description: 产品授权单号
          required: true
          type: string

      responses:
        200:
          description: 产品授权记录列表
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/VerifyRecords'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauth:
    post:
      summary: 添加产品授权
      description: 添加产品授权
      tags:
        - 产品授权
      parameters:
        - name: productauth
          in: body
          description: 需要添加的信息
          schema:
            $ref: '#/definitions/ProductAuthReqPost'
          required: true

      responses:
        200:
          description: 添加成功
          schema:
            $ref: '#/definitions/ProductAuthResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauth/{recordId}:
    get:
      summary: 获取授权详情
      description: 获取授权详情
      tags:
        - 产品授权
      parameters:
        -
          name: recordId
          in: path
          description: 授权记录id
          required: true
          type: integer

      responses:
        200:
          description: 授权详情信息
          schema:
            $ref: '#/definitions/ProductAuthDetailResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    put:
      summary: 提交合同
      description: 提交合同，只有审核状态=0（待提交） 才允许提交
      tags:
        - 产品授权
      parameters:
        -
          name: recordId
          in: path
          description: 授权记录id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/ProductAuthSp'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

    delete:
      summary: 删除产品审核
      description: 删除产品审核，只有审核状态=0（待提交） 才允许删除
      tags:
        - 产品授权
      parameters:
        - name: recordId
          in: path
          description: 授权记录id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/DeleteResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauth/status/{spId}:
    get:
      summary: 服务商获取授权状态
      description: 服务商获取授权状态
      tags:
        - 产品授权
      parameters:
        -
          name: spId
          in: path
          description: 服务商企业id
          required: true
          type: integer
        -
          name: cpId
          in: query
          description: 供应商id
          required: false
          type: integer
        -
          name: productId
          in: query
          description: 产品id
          required: false
          type: string
      responses:
        200:
          description: 授权状态
          schema:
            properties:
              status:
                type: integer
                description: 授权状态，0：未授权；1：授权审核中；2：已授权
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauth/{recordId}/cancel:
    put:
      summary: 取消审核授权
      description: 取消审核授权，只有status=1的可以取消，取消后status更新为0
      tags:
        - 产品授权
      parameters:
        -
          name: recordId
          in: path
          description: 授权记录id
          required: true
          type: integer

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauth/{recordId}/cpverify:
    put:
      summary: 供应商审核授权
      description: 供应商审核授权
      tags:
        - 产品授权
      parameters:
        -
          name: recordId
          in: path
          description: 授权记录id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/ProductAuthCp'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'

  /productauth/{recordId}/platformverify:
    put:
      summary: 运营平台审核授权
      description: 运营平台审核授权
      tags:
        - 产品授权
      parameters:
        -
          name: recordId
          in: path
          description: 授权记录id
          required: true
          type: integer
        -
          name: body
          in: body
          description: 需要修改的信息
          schema:
            $ref: '#/definitions/ProductAuthPlatform'
          required: true

      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'
  
  /order/{spOrderId}/arbitrate/{payId}:
    post:
      summary: 申请仲裁
      description: 申请仲裁 增加仲裁记录，并将订单分期状态修改为“仲裁中”
      tags:
        - 订单
      parameters:
        - name: spOrderId
          in: path
          type: string
          required: true
          description: 订单ID
        - name: payId
          in: path
          type: integer
          required: true
          description: 分期支付ID
        - name: arbitrate
          in: body
          required: true
          schema:
            $ref: '#/definitions/Arbitrate'
      responses:
        200:
          description: 仲裁信息
          schema:
            $ref: '#/definitions/ArbitrateResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'   
          
  /arbitrates:
    get:
      summary: 仲裁订单列表
      description: 仲裁订单列表
      tags:
        - 订单
      parameters:
        - name: cuName
          in: query
          type: string
          description: 企业客户名称
        - name: examineState
          in: query
          type: string
          description: 仲裁状态 '0' 提交申请,未审核 '1' 退款 '2' 不退款
          enum:
            - "0"
            - "1"
            - "2"
        - name: spOrderId
          in: query
          type: string
          description: 服务商子订单ID
        - name: productName
          in: query
          type: string
          description: 产品名称 
        - $ref: '#/parameters/PageNo'
        - $ref: '#/parameters/PageSize'
      responses:
        200:
          description: 仲裁信息列表
          schema:
            $ref: '#/definitions/ArbitratePage'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'   
  
  /arbitrate/{examineAuthId}:
    put:
      summary: 仲裁
      description: 仲裁 仲裁结果为退款，后台调用退款接口成功后修改仲裁状态。不退款修改仲裁状态，再调用修改分期状态接口修改为不退款 
      tags:
        - 订单       
      parameters:
        - name: examineAuthId
          in: path
          type: integer
          required: true
          description: 审核记录ID
        - name: Arbitrate
          in: body
          required: true
          schema: 
            $ref: '#/definitions/ArbitratePut'
      responses:
        200:
          $ref: '#/responses/PutResp'
        400:
          $ref: '#/responses/ParametersErr'
        404:
          $ref: '#/responses/NotFoundErr'
        500:
          $ref: '#/responses/InnerErr'
          
################################################################################
#                                 Parameters                                  #
################################################################################
parameters:
  PageNo:
    name: pageNo
    in: query
    description: 当前页码，默认第1页
    required: false
    type: integer
    format: int32
    minimum: 1
    default: 1

  PageSize:
    name: pageSize
    in: query
    description: 每页记录数，默认10条
    required: false
    type: integer
    format: int32
    minimum: 1
    maximum: 99999
    default: 10

  Sort:
    name: sort
    in: query
    description: 排序方式，json格式：{"id":"asc","name":"desc"} ，必须Url编码
    required: false
    type: string
    format: json

  UserId:
    name: user-id
    in: header
    description: 当前操作用户id
    required: false
    type: string

  ProductType:
    name: productType
    in: query
    type: string
    enum:
      - "single"
      - "group"
    description: 产品类型，single：单产品(供应商产品) ；group：捆绑产品(服务商产品)
    required: false

  PartnerId:
    name: partnerId
    in: path
    description: 合作伙伴id
    required: true
    type: integer
    format: int32
################################################################################
#                                 Responses                                  #
################################################################################
responses:
  PutResp:
    description: 修改成功
    schema:
      $ref: '#/definitions/RowsResp'

  DeleteResp:
    description: 删除成功
    schema:
      $ref: '#/definitions/RowsResp'

  ParametersErr:
    description: 参数异常
    schema:
      $ref: '#/definitions/Error'

  NotFoundErr:
    description: 资源不存在
    schema:
      $ref: '#/definitions/Error'

  InnerErr:
    description: 内部错误
    schema:
      $ref: '#/definitions/Error'

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Gmt:
    type: object
    description: 时间信息
    properties:
      gmtCreate:
        type: string
        format: date-time
        description: 创建时间
      gmtModified:
        type: string
        format: date-time
        description: 修改时间

  BankHeadsPage:
    type: object
    description: 银行总行列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          type: object
          description: 总行列表
          properties:
            bankHead:
              type: string
              description: 总行名称

  BankBranchsPage:
    type: object
    description: 银行支行列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          type: object
          description: 支行列表
          properties:
            bankName:
              type: string
              description: 支行全称
            bankNo:
              type: string
              description: 联行号

  StandardIndustrys:
    type: object
    description: 标准行业类别列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/StandardIndustryResp'

  StandardIndustryReqPost:
    type: object
    description: 标准行业类别添加实体
    required:
    - industryName
    allOf:
    - $ref: '#/definitions/StandardIndustry'

  StandardIndustryReqPut:
    type: object
    description: 标准行业类别修改实体
    allOf:
    - $ref: '#/definitions/StandardIndustry'

  StandardIndustryResp:
    type: object
    description: 标准行业类别响应实体
    allOf:
    - $ref: '#/definitions/StandardIndustry'
    - $ref: '#/definitions/Gmt'
    properties:
      industryId:
        type: integer
        description: 标准行业id

  StandardIndustry:
    type: object
    description: 标准行业类别信息
    properties:
      parentId:
        type: integer
        format: int32
        description: 父级标准行业id，0为最顶层
        default: 0
      industryName:
        type: string
        description: 标准行业名称
        minLength: 1
        maxLength: 100
      remark:
        type: string
        description: 备注
        maxLength: 100
      platformIndustryId:
        type: integer
        description: 对应平台行业id

  PlatformIndustrys:
    type: object
    description: 平台行业类别列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/PlatformIndustryResp'

  PlatformIndustryReqPost:
    type: object
    description: 平台行业类别添加实体
    required:
    - industryName
    allOf:
    - $ref: '#/definitions/PlatformIndustry'

  PlatformIndustryReqPut:
    type: object
    description: 平台行业类别修改实体
    allOf:
    - $ref: '#/definitions/PlatformIndustry'

  PlatformIndustryResp:
    type: object
    description: 平台行业类别响应实体
    allOf:
    - $ref: '#/definitions/PlatformIndustry'
    - $ref: '#/definitions/Gmt'
    properties:
      industryId:
        type: integer
        description: 平台行业id
      sorts:
        type: integer
        description: 排序号

  PlatformIndustry:
    type: object
    description: 平台行业类别信息
    properties:
      parentId:
        description: 父级平台行业id，0为最顶层
        type: integer
        format: int32
        default: 0
      industryName:
        type: string
        description: 平台行业名称
        minLength: 1
        maxLength: 100
      remark:
        type: string
        description: 备注
        maxLength: 100

  Categorys:
    type: object
    description: 品类列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/CategoryResp'

  CategoryReqPost:
    type: object
    description: 品类添加实体
    required:
    - categoryName
    allOf:
    - $ref: '#/definitions/Category'

  CategoryReqPut:
    type: object
    description: 品类修改实体
    allOf:
    - $ref: '#/definitions/Category'

  CategoryResp:
    type: object
    description: 品类响应实体
    allOf:
    - $ref: '#/definitions/Category'
    - $ref: '#/definitions/Gmt'
    properties:
      categoryId:
        type: integer
        description: 品类id

  Category:
    type: object
    description: 品类信息
    properties:
      parentId:
        description: 父级品类id，0为最顶层
        type: integer
        format: int32
        default: 0
      categoryName:
        type: string
        description: 品类名称
        minLength: 1
        maxLength: 100
      remark:
        type: string
        description: 备注
        maxLength: 100

  QualifyTypes:
    type: object
    description: 资质类型列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/QualifyTypeResp'

  QualifyTypeReqPost:
    type: object
    description: 资质类型添加实体
    required:
    - typeName
    allOf:
    - $ref: '#/definitions/QualifyType'

  QualifyTypeReqPut:
    type: object
    description: 资质类型修改实体
    allOf:
    - $ref: '#/definitions/QualifyType'

  QualifyTypeResp:
    type: object
    description: 资质类型响应实体
    allOf:
    - $ref: '#/definitions/QualifyType'
    - $ref: '#/definitions/Gmt'
    properties:
      typeId:
        type: integer
        description: 资质类型id

  QualifyType:
    type: object
    description: 资质类型信息
    properties:
      parentId:
        description: 父级类型id，0为最顶层
        type: integer
        format: int32
        default: 0
      typeName:
        type: string
        description: 资质类型名称
        minLength: 1
        maxLength: 20
      typeDesc:
        type: string
        description: 资质类型描述
        maxLength: 50

  QualifyTemplates:
    type: object
    description: 资质模版列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/QualifyTemplateResp'

  QualifyTemplateReqPost:
    type: object
    description: 资质模版添加实体
    required:
    - typeId
    - tempName
    - tempImage
    allOf:
    - $ref: '#/definitions/QualifyTemplate'

  QualifyTemplateReqPut:
    type: object
    description: 资质模版修改实体
    allOf:
    - $ref: '#/definitions/QualifyTemplate'
    properties:
      status:
        type: integer
        enum:
          - 0
          - 1
        description: 状态，1：正常；0：停用

  QualifyTemplateResp:
    type: object
    description: 资质模版响应实体
    allOf:
    - $ref: '#/definitions/QualifyTemplate'
    - $ref: '#/definitions/Gmt'
    properties:
      tempId:
        type: integer
        description: 资质模版id
      status:
        type: integer
        description: 状态，1：正常；0：
      typeName:
        type: string
        description: 资质类型名称

  QualifyTemplate:
    type: object
    description: 资质模版信息
    properties:
      typeId:
        description: 资质类型id
        type: integer
        format: int32
        default: 0
      tempName:
        type: string
        description: 资质模版名称
        minLength: 1
        maxLength: 50
      tempDesc:
        type: string
        description: 资质模版描述
        maxLength: 200
      tempImage:
        type: string
        description: 资质模版图片，多个图片以英文逗号分隔
        maxLength: 1000

  ContractTemplates:
    type: object
    description: 合同模板列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/ContractTemplateResp'

  ContractTemplateReqPost:
    type: object
    description: 合同模板添加实体
    required:
    - tempName
    - tempFile
    allOf:
    - $ref: '#/definitions/ContractTemplate'

  ContractTemplateReqPut:
    type: object
    description: 合同模板修改实体
    allOf:
    - $ref: '#/definitions/ContractTemplate'
    properties:
      status:
        type: integer
        enum:
          - 0
          - 1
        description: 状态，1：正常；0：停用

  ContractTemplateResp:
    type: object
    description: 合同模板响应实体
    allOf:
    - $ref: '#/definitions/ContractTemplate'
    - $ref: '#/definitions/Gmt'
    properties:
      tempId:
        type: integer
        description: 合同模板id
      status:
        type: integer
        description: 状态，1：正常；0：停用

  ContractTemplate:
    type: object
    description: 合同模板信息
    properties:
      tempName:
        type: string
        description: 合同模板名称
        minLength: 1
        maxLength: 20
      tempDesc:
        type: string
        description: 合同模板描述
        maxLength: 200
      tempFile:
        type: string
        description: 合同模版文件，多个文件以英文逗号分隔
        maxLength: 1000
      useRange:
        type: integer
        enum:
          - 1
          - 2
          - 3
        description: 使用范围，1：内商城；2：外商城；3：内商城+外商城

  Collections:
    type: object
    description: 收藏列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/CollectionResp'

  CollectionReqPost:
    type: object
    description: 收藏添加实体
    allOf:
    - $ref: '#/definitions/Collection'

  CollectionReqPut:
    type: object
    description: 收藏修改实体
    allOf:
    - $ref: '#/definitions/Collection'

  CollectionResp:
    type: object
    description: 收藏响应实体
    allOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Gmt'
    properties:
      collectionId:
        type: integer
        description: 收藏id

  Collection:
    type: object
    description: 收藏信息
    properties:
      contentType:
        type: integer
        description: 内容类型；1：产品；2：合作伙伴
      contentId:
        type: string
        description: 内容id
        maxLength: 30
      contentName:
        type: string
        description: 内容名称
        maxLength: 100
      contentDetail:
        type: string
        description: 内容描述
        maxLength: 500
      contentPartner:
        type: integer
        description: 内容所属企业id
      partnerId:
        type: integer
        description: 所属企业id
      userId:
        type: integer
        description: 所属用户id
      appName:
        type: string
        description: 所属应用名称
        maxLength: 20

  PhoneMsg:
    type: object
    description: 发送短信
    required:
      - phone
      - detail
    properties:
      phone:
        type: string
        description: 接收短信的手机
        minLength: 11
        maxLength: 11
        pattern: '^\d{11}$'
      detail:
        type: string
        description: 短信内容
        minLength: 1
        maxLength: 200
      createUser:
        type: integer
        description: 创建用户id
      createApp:
        type: string
        description: 创建app
        maxLength: 20

  EmailMsg:
    type: object
    description: 发送邮件
    required:
      - email
      - title
      - detail
    properties:
      email:
        type: string
        description: 接收邮箱
        minLength: 1
        maxLength: 30
      title:
        type: string
        description: 邮件标题
        minLength: 1
        maxLength: 50
      detail:
        type: string
        description: 邮件内容
        minLength: 1
        maxLength: 500
      createUser:
        type: integer
        description: 创建用户id
      createApp:
        type: string
        description: 创建app
        maxLength: 20

  PlatformEmployeeReqPost:
    type: object
    description: 平台员工基本信息添加实体
    required:
    - empName
    - phone
    allOf:
    - $ref: '#/definitions/PlatformEmployee'
    properties:
      roles:
        type: array
        description: 角色id列表
        items:
          type: integer
      departments:
        type: array
        description: 部门列表
        items:
          type: object
          description: 员工部门关系
          properties:
            depId:
              type: integer
              description: 部门id
            position:
              type: integer
              description: 员工在该部门职位

  PlatformEmployeeReqPut:
    type: object
    description: 平台员工基本信息修改实体
    allOf:
    - $ref: '#/definitions/PlatformEmployee'
    properties:
      roles:
        type: array
        description: 角色id列表
        items:
          type: integer
      departments:
        type: array
        description: 部门列表
        items:
          type: object
          description: 员工部门关系
          properties:
            depId:
              type: integer
              description: 部门id
            position:
              type: integer
              description: 员工在该部门职位

  PlatformEmployeeResp:
    type: object
    description: 平台员工基本信息响应实体
    allOf:
    - $ref: '#/definitions/PlatformEmployee'
    - $ref: '#/definitions/Gmt'
    properties:
      empId:
        type: integer
        description: 员工id
      isAdmin:
        type: integer
        description: 是否为管理员，1：是；0：否
        default: 0
      roles:
        type: array
        description: 角色列表
        items:
          type: object
          description: 角色关系
          properties:
            roleId:
              type: integer
              description: 角色id
            roleName:
              type: integer
              description: 角色名称
      departments:
        type: array
        description: 部门列表
        items:
          type: object
          description: 员工部门关系
          properties:
            depId:
              type: integer
              description: 部门id
            departName:
              type: integer
              description: 部门名称
            position:
              type: integer
              description: 员工在该部门职位

  PlatformEmployee:
    type: object
    description: 平台员工基本信息
    properties:
      empName:
        type: string
        description: 员工姓名
        minLength: 1
        maxLength: 10
      jobNo:
        type: string
        description: 员工工号，只允许数字
        maxLength: 20
        pattern: '[0-9]{0,20}'
      jobName:
        type: string
        description: 员工岗位
        maxLength: 20
      email:
        type: string
        description: 邮箱，格式：xxx@yyy.zzz
        maxLength: 30
      phone:
        type: string
        description: 手机，只允许数字
        minLength: 11
        maxLength: 11
        pattern: '^\d{11}$'
      status:
        type: integer
        enum:
          - 0
          - 1
        description: 状态 | 0，停用；1：正常
        default: 1
      entryDate:
        type: string
        format: date-time
        description: 入职日期
      userId:
        type: integer
        description: 所属用户id

  PlatformEmployees:
    type: object
    description: 平台员工列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/PlatformEmployeeResp'

  Status:
    type: object
    description: 状态
    required:
      - status
    properties:
      status:
        type: integer
        enum:
          - 0
          - 1
        description: 状态，0，停用；1：正常

  PartnerAllWidthAudit:
    type: object
    description: 客户所有信息
    required:
      - partnerAudit
    properties:
      partnerAudit:
        $ref: '#/definitions/PartnerAudit'
      partner:
        $ref: '#/definitions/Partner'
      partnerBusiness:
        $ref: '#/definitions/PartnerBusiness'
      partnerExt:
        $ref: '#/definitions/PartnerExt'
      partnerQualifys:
        type: array
        items:
          $ref: '#/definitions/PartnerQualify'
      employees:
        $ref: '#/definitions/Employee'

  PartnerAudit:
    type: object
    description: 审核信息
    required:
    - status
    properties:
      status:
        type: integer
        enum:
          - 0
          - 1
          - 2
        description: 审核状态，必填，0：未审核；1：已审核；2：审核不通过
      auditUser:
        type: integer
        description: 审核用户id，添加修改时无此参数，添加时从header中取
      auditMsg:
        type: string
        description: 审核意见，审核状态为2时必填，0-50字符

  PartnerStatus:
    type: object
    description: 合作伙伴状态
    required:
    - status
    properties:
      status:
        type: integer
        enum:
          - 1
          - 2
          - 0
        description: 接入状态，必填，1：正常接入；2：暂停接入；0：停止接入

  PartnerAll:
    type: object
    description: 合作伙伴全量信息实体，此处只包含实体定义，具体属性参考OS接口文档
    required:
    - partner
    properties:
      partner:
        $ref: '#/definitions/Partner'
      partnerBusiness:
        $ref: '#/definitions/PartnerBusiness'
      partnerExt:
        $ref: '#/definitions/PartnerExt'
      PartnerQualifys:
        type: array
        items:
          $ref: '#/definitions/PartnerQualify'
      employees:
        $ref: '#/definitions/Employee'

  Partner:
    type: object
    description: 合作伙伴（组织）

  PartnerBusiness:
    type: object
    description: 合作伙伴工商注册信息

  PartnerExt:
    type: object
    description: 合作伙伴扩展信息

  PartnerQualify:
    type: object
    description: 合作伙伴资质信息

  PartnerPayReqPost:
    type: object
    description: 合作伙伴支付信息添加实体
    required:
    - contact
    - phone
    - bankHead
    - bankAccountName
    - bankAccountNumber
    - bankAccountType
    - bankName
    - verifyCode
    allOf:
    - $ref: '#/definitions/PartnerPay'

  PartnerPayReqPut:
    type: object
    description: 合作伙伴支付信息修改实体
    allOf:
    - $ref: '#/definitions/PartnerPay'

  PartnerPay:
    type: object
    description: 合作伙伴支付信息实体
    properties:
      partnerId:
        type: integer
        description: 合作伙伴id
      payAccount:
        type: string
        description: 支付账户
      contact:
        type: string
        description: 联系人
      phone:
        type: string
        description: 联系电话
      bankHead:
        type: string
        description: 银行总行
      bankAccountName:
        type: string
        description: 开户名
      bankAccountNumber:
        type: string
        description: 银行卡号
      bankAccountType:
        type: integer
        description: 银行卡类别，1：对公；2：对私
      bankName:
        type: string
        description: 开户行名称（支行）
      bankProvince:
        type: string
        description: 开户行省
      bankCity:
        type: string
        description: 开户行市
      bankCertificate:
        type: string
        description: 银行开户许可证
      empCreate:
        type: integer
        description: 创建人员工id
      verifyCode:
        type: string
        description: 验证码
        maxLength: 6

  Employee:
    type: object
    description: 员工基本信息

  DepartmentReqPost:
    type: object
    description: 部门添加实体
    required:
    - departName
    allOf:
    - $ref: '#/definitions/Department'

  DepartmentReqPut:
    type: object
    description: 部门修改实体
    allOf:
    - $ref: '#/definitions/Department'

  DepartmentResp:
    type: object
    description: 部门响应实体
    allOf:
    - $ref: '#/definitions/Department'
    - $ref: '#/definitions/Gmt'
    properties:
      depId:
        type: integer
        description: 部门id

  Department:
    type: object
    description: 部门
    properties:
      departName:
        type: string
        description: 部门名称，必填，1-50字符
        minLength: 1
        maxLength: 50
      departNo:
        type: string
        description: 部门编号，0-20字符
        maxLength: 20
      parentId:
        type: integer
        description: 上级部门id
        default: 0
      status:
        type: integer
        enum:
          - 0
          - 1
        description: 状态，1：正常；0：停用
        default: 1

  Departments:
    type: object
    description: 部门列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/DepartmentResp'

  RoleReqPost:
    type: object
    description: 角色添加实体
    required:
    - roleName
    allOf:
    - $ref: '#/definitions/Role'

  RoleReqPut:
    type: object
    description: 角色修改实体
    allOf:
    - $ref: '#/definitions/Role'

  RoleResp:
    type: object
    description: 角色响应实体
    allOf:
    - $ref: '#/definitions/Role'
    - $ref: '#/definitions/Gmt'
    properties:
      roleId:
        type: integer
        description: 角色id
      isAdmin:
        type: integer
        description: 是否管理员，0，否；1：是
        enum:
          - 0
          - 1
        default: 0

  Role:
    type: object
    description: 角色
    properties:
      roleName:
        type: string
        description: 角色名称
        minLength: 1
        maxLength: 20
      status:
        type: integer
        enum:
          - 0
          - 1
        description: 状态 | 0，停用；1：正常
        default: 1
      appName:
        type: string
        description: 应用名称
        minLength: 1
        maxLength: 20

  Roles:
    type: object
    description: 角色列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/RoleResp'

  OperationReqPost:
    type: object
    description: 操作添加实体
    required:
    - opName
    - appName
    - opKey
    allOf:
    - $ref: '#/definitions/Operation'

  OperationReqPut:
    type: object
    description: 操作修改实体
    allOf:
    - $ref: '#/definitions/Operation'

  OperationResp:
    type: object
    description: 操作响应实体
    allOf:
    - $ref: '#/definitions/Operation'
    - $ref: '#/definitions/Gmt'
    properties:
      opId:
        type: integer
        description: 操作id
      opKid:
        type: string
        description: 操作页面元素id

  Operation:
    type: object
    description: 操作
    properties:
      opName:
        type: string
        description: 操作名称
        minLength: 1
        maxLength: 50
      opTip:
        type: string
        description: 操作描述
        maxLength: 100
      appName:
        type: string
        description: 应用名称
        minLength: 1
        maxLength: 20
      isBase:
        type: integer
        enum:
          - 0
          - 1
        description: 是否基础操作，0：否；1：是
        default: 0
      opKey:
        type: string
        description: 操作key
        minLength: 1
        maxLength: 60
      parentId:
        type: integer
        description: 父级操作id，0为顶级

  Operations:
    type: object
    description: 操作列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/Operation'

  ProductsPage:
    type: object
    description: 产品列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/ProductsResp'

  ProductsResp:
    type: object
    description: 产品列表响应实体
    allOf:
    - $ref: '#/definitions/Products'
    properties:
      productStatus:
        type: integer
        description: 产品状态，0，草稿；1：已上架；2：已下架
      partnerName:
        type: string
        description: 企业名称

  ProductResp:
    type: object
    description: 产品响应实体
    allOf:
    - $ref: '#/definitions/Product'
    properties:
      productStatus:
        type: integer
        description: 产品状态，0，草稿；1：已上架；2：已下架
      verifyStatus:
        type: integer
        description: 审核状态，0：无；1：上架待审核；2：下架待审核；3：上架审核通过；4：下架审核通过；5：上架审核不通过；6：下架审核不通过
      verifyId:
        type: integer
        description: 审核记录id

  Products:
    type: object
    description: 产品列表，更多产品参数参考产品库（ps）接口文档：products

  Product:
    type: object
    description: 产品响应实体，更多参数参考产品库（ps）接口文档：productResp

  Productverifies:
    type: object
    description: 产品审核列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/ProductverifyResp'

  ProductsverifyResp:
    type: object
    description: 产品审核响应实体
    allOf:
    - $ref: '#/definitions/Productverify'
    - $ref: '#/definitions/Gmt'
    properties:
      verifyStatus:
        type: integer
        description: 审核状态，1：上架待审核；2：下架待审核；3：上架审核通过；4：下架审核通过；5：上架审核不通过；6：下架审核不通过

  ProductverifyResp:
    type: object
    description: 产品审核响应实体
    allOf:
    - $ref: '#/definitions/Productverify'
    - $ref: '#/definitions/Gmt'
    properties:
      verifyStatus:
        type: integer
        description: 审核状态，1：上架待审核；2：下架待审核；3：上架审核通过；4：下架审核通过；5：上架审核不通过；6：下架审核不通过
      partnerName:
        type: string
        description: 企业名称
      productName:
        type: string
        description: 产品名称

  Productverify:
    type: object
    description: 产品审核信息
    properties:
      partnerId:
        type: integer
        description: 企业id
      productId:
        type: string
        description: 产品编号
      productType:
        type: string
        enum:
          - "single"
          - "group"
        description: 产品类型，single：单产品(供应商产品) ；group：捆绑产品(服务商产品)
      verifyType:
        type: integer
        description: 审核类型，1：上架审核；2：下架审核
      status:
        type: integer
        description: 审核状态，0：待审核；1：审核通过；2：审核不通过
      opinion:
        type: string
        description: 审核意见
      verifyTime:
        type: string
        format: date-time
        description: 审核时间

  ProductverifyReqPost:
    type: object
    description: 产品审核添加实体
    properties:
      partnerId:
        type: integer
        description: 企业id
      productId:
        type: string
        description: 产品编号
      productType:
        type: string
        enum:
          - "single"
          - "group"
        description: 产品类型，single：单产品(供应商产品) ；group：捆绑产品(服务商产品)
      verifyType:
        type: integer
        description: 审核类型，1：上架审核；2：下架审核
      createUser:
        type: integer
        description: 提交用户id

  ProductverifyReqPut:
    type: object
    description: 产品审核修改实体
    properties:
      status:
        type: integer
        description: 审核状态，1：审核通过；2：审核不通过
      opinion:
        type: string
        description: 审核意见

  ProductAuthDetails:
    type: object
    description: 产品授权列表
    properties:
      page:
        $ref: '#/definitions/Page'
      data:
        type: array
        items:
          $ref: '#/definitions/ProductAuthDetailResp'

  ProductAuthDetailResp:
    type: object
    description: 产品授权信息响应实体
    allOf:
    - $ref: '#/definitions/ProductAuthResp'
    properties:
      products:
        type: array
        items:
          properties:
            productId:
              type: string
              description: 产品编号
            productName:
              type: string
              description: 产品名称
            typeName:
              type: string
              description: 产品所属品类名称
            specMinPrice:
              type: number
              description: 产品所属实例最低售价
            specMaxPrice:
              type: number
              description: 产品所属实例最高售价

  ProductAuthResp:
    type: object
    description: 产品授权信息响应实体
    allOf:
    - $ref: '#/definitions/ProductAuth'
    - $ref: '#/definitions/ProductAuthSp'
    - $ref: '#/definitions/ProductAuthCp'
    - $ref: '#/definitions/ProductAuthPlatform'
    - $ref: '#/definitions/Gmt'
    properties:
      recordId:
        type: integer
        description: 授权记录id
      status:
        type: integer
        description: 审核状态，0：待提交；1：待供应商审核；2：供应商审核不通过；3：待运营平台审核；4：运营平台审核不通过；5：已授权（审核通过）；6：已失效
      cpName:
        type: string
        description: 供应商企业名称
      spName:
        type: string
        description: 服务商企业名称
      contractFile:
        type: string
        description: 合同下载文件
      cpVerifyTime:
        type: string
        format: date-time
        description: 供应商审核时间
      platformVerifyTime:
        type: string
        format: date-time
        description: 运营平台审核时间

  ProductAuthReqPost:
    type: object
    description: 产品授权信息添加实体
    allOf:
    - $ref: '#/definitions/ProductAuth'
    properties:
      products:
        type: array
        description: 授权记录id
        items:
          type: string
          description: 产品编号

  ProductAuth:
    type: object
    description: 产品授权信息
    properties:
      authId:
        type: string
        description: 授权单号
      authType:
        type: integer
        description: 授权类型，1：部分产品授权；2：全部产品授权
      spId:
        type: string
        description: 服务商id
      cpId:
        type: string
        description: 供应商id

  ProductAuthSp:
    type: object
    description: 产品授权信息sp提交合同
    properties:
      contractId:
        type: string
        description: 合同编号
      contractName:
        type: string
        description: 合同名称
      contractBeginDate:
        type: string
        format: date-time
        description: 合同起始时间
      contractValidDate:
        type: string
        format: date-time
        description: 合同失效时间
      contractSpFile:
        type: string
        description: 服务商合同文件

  ProductAuthCp:
    type: object
    description: 产品授权信息cp审核
    properties:
      status:
        type: integer
        description: 审核状态，2：供应商审核不通过；3：待运营平台审核（供应商审核通过）；
      opinion:
        type: string
        description: 审核意见
      contractCpFile:
        type: string
        description: 供应商合同文件

  ProductAuthPlatform:
    type: object
    description: 产品授权信息platform审核
    properties:
      status:
        type: integer
        description: 审核状态，4：运营平台审核不通过；5：已授权（运营平台审核通过）
      opinion:
        type: string
        description: 审核意见

  VerifyRecords:
    type: object
    description: 审核记录
    properties:
      recordId:
        type: integer
        description: 记录id
      opTime:
        type: string
        format: date-time
        description: 操作时间
      opType:
        type: integer
        description: 操作类型；0：运营平台；1：服务商；2：供应商
      opCompany:
        type: string
        description: 操作企业名称
      opName:
        type: string
        description: 操作名称
      opOpinion:
        type: string
        description: 操作意见
  
  Arbitrate:
    type: object
    description: 仲裁请求对象
    properties:
      amountPrice:
        type: number
        format: float(10,2)
        description: 成交金额/应付金额
      orderType:
        type: string
        description: 订单类型  卖家代下单员工ID为0或者空时值为0买家下单，否则为1代客下单
        enum:
          - "1"
          - "0"
      productCode:
        type: string
        description: 产品编码
      productName:
        type: string
        description: 产品名称 
      productSpecName:
        type: string
        description: 产品实例名称
      saleAttrName:
        type: string
        description: 实例属性
      spName:
        type: string
        description: 卖家企业名称 
      spId:
        type: integer
        description: 卖家企业ID
      orderCompId:
        type: integer
        description: 买家企业ID
      cuName:
        type: string
        description: 买家企业名称 
      orderEmpId:
        type: integer
        description: 申请仲裁买家企业员工ID
      spOrderStageNo:
        type: integer
        description: 第几期
      applyDesc:
        type: string
        description: 申请备注
  
  ArbitrateResp:
    type: object
    description: 申请仲裁请求对象
    properties:
      spOrderId:
        type: string
        description: 子订单ID
      payId:
        type: integer
        description: 分期支付ID
      examineAuthId:
        type: integer
        description: 审核编号
      examineState:
        type: integer
        description: 审核状态
      examineSuggest:
        type: string
        description: 审核意见
      refundAmount:
        type: number
        description: 退款金额
      examineDate:
        type: string
        description: 审核时间
      examineEmpId:
        type: integer
        description: 审核员工ID
      appleTime:
        type: string
        description: 申请仲裁时间
    allOf:
      - $ref: '#/definitions/Arbitrate'
  
  ArbitratePut:
    type: object
    description: 仲裁请求对象
    required:
      - examineState
      - examineSuggest
      - refundAmount
      - spOrderStageNo
      - examineEmpId
      - orderEmpId
      - orderCompId
    properties:
      examineState:
        type: integer
        description: 审核状态
      examineSuggest:
        type: string
        description: 审核意见
        maxLength: 300
      refundAmount:
        type: number
        description: 退款金额
      examineEmpId:
        type: integer
        description: 审核员工ID
      spOrderStageNo:
        type: integer
        description: 第几期
      orderEmpId:
        type: integer
        description: 申请人员工ID
      orderCompId:
        type: integer
        description: 所属企业客户ID
      
      
  ArbitratePage:
    type: object
    description: 仲裁订单分页
    properties:
      data: 
        type: array
        items:
          $ref: '#/definitions/ArbitrateResp'
      page:
        $ref: '#/definitions/Page'
  
  RowsResp:
    type: object
    description: 修改/删除成功响应实体
    properties:
      rows:
        type: integer
        description: 影响行数

  Page:
    type: object
    description: 分页信息
    properties:
      page:
        type: integer
        description: 当前页码
      nextPage:
        type: integer
        description: 下一页页码
      prePage:
        type: integer
        description: 上一页页码
      totalPages:
        type: integer
        description: 总页数
      totalCount:
        type: integer
        description: 总记录数
      firstPage:
        type: boolean
        description: 是否为首页
      lastPage:
        type: boolean
        description: 是否为尾页
      hasPrePage:
        type: boolean
        description: 是否有上一页
      hasNextPage:
        type: boolean
        description: 是否有下一页
      startRow:
        type: integer
        description: 当前页起始行
      endRow:
        type: integer
        description: 当前页结束行

  Error:
    type: object
    description: 错误Bean
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: 错误码
      message:
        type: string
        description: 错误描述
      errors:
        type: array
        description: 具体错误
        items:
          $ref: '#/definitions/ErrorMsg'

  ErrorMsg:
    type: object
    description: 错误消息详细信息
    properties:
      field:
        type: string
        description: 错误字段
      message:
        type: string
        description: 错误原因
